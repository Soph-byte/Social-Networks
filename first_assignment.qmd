---
title: "Social_Networks_first_assignment"
format: html
editor: visual
---

# Introduction

This project focuses on the analysis of a bipartite network that represents the Abu Sayyaf Group's involvement in kidnapping events in the Philippines in 2014. The dataset, obtained from the ICON project, links members of the Abu Sayyaf Group with the specific kidnappings they were involved in.

The goal of this analysis is to explore fundamental network properties, such as node connectivity, degree distribution, and overall structure. These properties will allow us to gain insights into the organizational dynamics of the group, which can be reflected in the network's topology.

https://networks.skewed.de/net/kidnappings

## Libraries

```{r}
library(readr)
library(igraph)
library(ggplot2)
library(ggraph)
```

## Running Code

```{r}
edges <- read_csv("network/edges.csv")

nodes <- read_csv("network/nodes.csv")

#Buiding a graph from data
g <- graph_from_data_frame(d = edges, vertices = nodes, directed = TRUE)
```

Analyze the network by answer the following questions:

### *1. What is the number of nodes and links?*

```{r}
vcount(g)#Nodes = Vertices 
ecount(g)#Links = Edges 
```

Our dataset has 402 links and 351 nodes

### *2. What is the average degree in the network? And the standard deviation of the degree?*

To calculate the average degree and standard deviation, we can use the degree values obtained from the following code:

```{r}
deg <- degree(g,mode="all")
```

```{r}
mean(deg)
sd(deg)
```

The average degree of the network is 2.29. This points to a sparse and loosely connected structure, consistent with how clandestine networks often operate: keeping operational cells small to avoid detection. The standard deviation of the degree is 3.89, which is quite high relative to the mean. This suggests a heterogeneous structure: while most nodes are weakly connected, a few nodes are highly connected, likely representing core individuals in the Abu Sayyaf Group or events that involved multiple operatives. This uneven distribution reflects typical features of terrorist or militant group dynamics, where key figures coordinate multiple decentralized actions.

### *3. Plot the degree distribution in linear-linear scale and in log-log-scale. Does it have a typical connectivity? What is the degree of the most connected node?*

```{r}
#linear-linear
ggplot() + geom_histogram(aes(x=degree(g,mode="all"))) + labs(x="Degree",y="Density")

max_degree_node <- which.max(deg)
deg[max_degree_node]
```

The histogram illustrates the distribution of node degrees within the network, showing how many connections each node has. From the distribution, it's clear that the vast majority of nodes have a very low degree, typically around 1 or 2 connections: most nodes are minimally connected, indicating a sparse network structure. However, the histogram also reveals a long right tail, meaning that while most nodes are weakly connected, a small number of nodes have a significantly higher degree — some with 20, 40, or even 58 connections, the degree of the most connected node. This pattern suggests a right-skewed or heavy-tailed distribution, where a few highly connected nodes coexist with many low-degree nodes.

```{r}
#log
ggplot() + 
  geom_histogram(aes(x=degree(g, mode="all"))) + 
  scale_x_log10() + 
  scale_y_log10() + 
  labs(x="Degree (log scale)", y="Density (log scale)") 
  
```

While the linear-linear histogram highlights the skewed distribution of node degrees and the presence of a few highly connected hubs, the log-log plot offers a deeper view into the scaling behavior of the network. By transforming both axes logarithmically, the log-log visualization makes it easier to detect whether the degree distribution follows a power-law, which is often indicative of a scale-free network.

In this plot, the degree distribution appears to align roughly along a straight line in the log-log space, especially in the tail. This pattern supports the idea that the network may be scale-free, where a small number of nodess dominate the connectivity, and the probability of a node having a high degree decreases polynomially rather than exponentially.

These nodes, the few ones that are highly connected, can play a crucial role in the flow of information, connectivity, and resilience of the network. Their presence may also influence the network’s vulnerability — if one of them fails or is removed, it could significantly disrupt the system.

### *4. What is the clustering coefficient (transitivity) in the network?*

```{r}
transitivity(g)
```

The global clustering coefficient (transitivity) of the network is 0, which means that there are no closed triplets — in other words, there are no triangles where three nodes are all directly connected to each other. This suggests that the network is not clustered at all, and that nodes tend to connect in a more tree-like or chain-like structure rather than forming tightly knit groups. Such a result indicates a network with no local cohesion, where neighbors of a node are almost never connected to each other.

This result is significant in the context of Abu Sayyaf operations: while limiting collaboration, enhances the group’s resilience against infiltration.

### *5. What is the assortativity (degree) in the network?*

```{r}
assortativity_degree(g)
```

The assortativity coefficient based on node degree is -0.23, indicating a moderate negative assortativity in the network. This means that nodes with a high degree tend to connect more often with nodes that have a low degree, rather than with other highly connected nodes.

This reflects a centralized structure, where a few key figures are repeatedly involved across many separate events, while most events involve only a small number of actors.

In this kind of criminal or militant network, such disassortative mixing can imply a strategic effort to decentralize risk, where central figures maintain influence across various operations without necessarily linking collaborators directly to each other — reducing traceability and limiting exposure in case of capture.

### *6. Using the Louvain method, does the network have a community structure? If so, what is its modularity?*

```{r}
g_undirected <- as.undirected(g, mode = "collapse")

# Louvain
louv <- cluster_louvain(g_undirected)

# Leiden
leid <- cluster_leiden(g_undirected)

# Community counts
length(sizes(louv))
length(sizes(leid))


```

```{r}
# Modularity
modularity(g_undirected, membership(louv))
modularity(g_undirected, membership(leid))
```

To investigate the organization of the network, we used both the Leiden and Louvain methods.The Louvain method identified 35 communities with a modularity score of 0.786, indicating a strong community structure. The high modularity suggests that the network contains several groups of nodes that are more densely connected internally than externally— which can be interpreted as meaningful substructures.

The Leiden algorithm, on the other hand, detected 351 communities, corresponding to the total number of nodes in the network. The modularity score of −0.011indicates that this partition is worse than random, and no significant structural groupings were identified.

Overall, we conclude that the Louvain method is better suited for detecting structural patterns in the Abu Sayyaf network.

```{r}
par(mfrow = c(1, 2))
plot(louv, g_undirected, vertex.label = NA, vertex.size = 5, main = "Louvain Communities")
plot(leid, g_undirected, vertex.label = NA, vertex.size = 5, main = "Leiden Communities")

```

The visualizations of Louvain and Leiden illustrate the significant differences between the two methods.\
The Louvain method clearly identifies larger and cohesive community clusters. These groups are visibly well-defined, with nodes that are tightly connected internally and more loosely connected to other communities — consistent with the high modularity score. In contrast, the Leiden algorithm divides the network into many small, fragmented communities, often consisting of just one or two nodes. This outcome reflects the negative modularity and supports the earlier conclusion: Louvain is more appropriate for revealing community structure in this network.

### *7. Test that the clustering coefficient in the network cannot be statistically explain by a configuration model in which the nodes have the same degree distribution as the original.*

```{r}
# Original clustering coefficient
observed_transitivity <- transitivity(g)

# Generate 100 null models with same degree distribution
null_transitivities <- replicate(100, {
  g_null <- sample_degseq(degree(g), method = "simple")
  transitivity(g_null)
})

# Plot the distribution of clustering coefficients from null models
hist(null_transitivities, main = "Null Model Distribution of Clustering Coefficient",
     xlab = "Clustering Coefficient", col = "lightblue", border = "white")
abline(v = observed_transitivity, col = "red", lwd = 2)

```

```{r}
# Calculate empirical p-value
p_value <- mean(null_transitivities >= observed_transitivity)
p_value

```

The empirical p-value is 1, indicating that none of the 100 networks in the configuration model had as low a clustering coefficient as the original. This means that the lack of clustering in the Abu Sayyaf network is not a statistical error of its degree distribution, but rather a structurally significant feature.

Such a pattern suggests intentional decentralization, perhaps to reduce the risk of network detection by closely linked groups. It provides support for the notion of a subdivided cell structure typical of underground organizations.

### *8. Visualize the neighborhood of the node with the largest centrality (closeness)*

```{r}
# Compute closeness centrality
closeness_vals <- closeness(g, mode = "all")
top_node <- V(g)[which.max(closeness_vals)]

# Create ego-graph: 1-step neighborhood
ego_graph <- make_ego_graph(g, order = 1, nodes = top_node)[[1]]

# Visualize
plot(ego_graph,
     vertex.size = 5,
     vertex.label = NA,
     edge.arrow.size = 0.4,
     main = paste("Ego Network of Node with Highest Closeness:", top_node$name))


```

The ego network of node E13, which has the highest Closeness Centrality in the network, shows a very loose structure as it only connects to one other node. Closeness normally indicates that a node is “close” to many others. However, in bipartite networks, event nodes such as E13 achieve high closeness if they act as bridges between distant parts of the network. In this case, E13 probably plays an important role as it connects two large parts of the graph via indirect paths. Its centrality does not come from its local connectivity, but from its strategic position in the network. It may serve as an important event that connects actors that would otherwise have no connection.
